module.exports = {
    isSuccess: () => t => t.isSuccess(),
    isFailure: () => t => t.isFailure(),
    toNullable: () => t => t.toNullable(),
    toArray: () => t => t.toArray(),
    toPromise: () => t => t.toPromise(),
    get: () => t => t.get(),
    getOrElse: def => t => t.getOrElse(def),
    orElse: def => t => t.orElse(def),
    forEach: consumer => t => t.forEach(consumer),
    map: mapper => t => t.map(mapper),
    flatMap: mapper => t => t.flatMap(mapper),
    catch: consumer => t => t.catch(consumer),
    tap: (vConsumer, eConsumer) => t => t.tap(vConsumer, eConsumer),
    filter: p => t => t.filter(p),
    recover: map => t => t.recover(map),
    recoverWith: rec => t => t.recoverWith(rec),
    transform: (vMap, eMap) => t => t.transform(vMap, eMap),
    safeTransform: (vMap, eMap) => t => t.safeTransform(vMap, eMap),
    transmute: (vMap, eMap) => t => t.transmute(vMap, eMap),
    failed: () => t => t.failed(),
    toOptional: Optional => t => t.toOptional(Optional),
    toOption: Option => t => t.toOption(Option),
    toMaybe: Maybe => t => t.toMaybe(Maybe),
    toObservable: Observable => t => t.toObservable(Observable),
    toSuppressingObservable: Observable => t =>
        t.toSuppressingObservable(Observable),
    toHungObservable: Observable => t => t.toHungObservable(Observable),
    permissive: () => t => t.permissive()
};
